using System;

namespace CodeInterview
{

	//	Given the head of a singly linked list, reverse the list, and return the reversed list.



	//Example 1:


	//Input: head = [1,2,3,4,5]
	//	Output: [5,4,3,2,1]


	class Problem
	{
	}
	class Node
	{
		public int data;
		public Node next;

		public Node()
		{

		}
	}

	class CustomList
	{
		private Node head;

		public CustomList()
		{
			head = null;
		}

		//add as ffirst element
		public void addFirst(int data)
		{
			Node toAdd = new Node();

			//set
			toAdd.data = data;
			toAdd.next = head;

			//new head;

			head = toAdd;
		}

		//add as last element
		public void addLast(int data)
		{
			if (head == null)
			{
				head = new Node();

				head.data = data;
				head.next = null;


			}

			else
			{

				Node current = head;

				while (current.next != null)
					current = current.next;

				Node toAdd = new Node();

				toAdd.data = data;
				toAdd.next = null;

				current.next = toAdd;



			}
		}

		//print elements of the list

		public void print()
		{
			Node current = head;

			while (current != null)
			{

				Console.Write(current.data + " -> ");


				current = current.next;
			}
			Console.Write("null");
			Console.WriteLine();
		}

		public void reverse()
		{
			Node current = head;
			Node previous = null;
			Node nextElement = null;

			while (current != null)
			{
				nextElement = current.next;
				current.next = previous;
				previous = current;
				current = nextElement;

			}

			head = previous;

		}

		public Node reverseRecursive(Node head)
		{
			Node current = head;

			if (head == null) return null;

			if (head.next != null)
			{
				current = reverseRecursive(head.next);
				head.next.next = head;
			}
			head.next = null;

			return current;
		}

		public void Swap()
		{
			Node current = head;

			while (current != null && current.next != null)
			{
				int tmp = current.data;
				current.data = current.next.data;
				current.next.data = tmp;


				current = current.next.next;
			}
		}

	}

	class Program
	{
		static void Main(string[] args)
		{


			CustomList list1 = new CustomList();

			//first  list
			list1.addFirst(1);
			list1.addFirst(2);
			list1.addFirst(3);
			list1.addFirst(4);
			list1.addFirst(5);

			list1.print();

			list1.reverse();

			list1.print();

			list1.Swap();
			list1.print();



			Console.WriteLine();



		}
	}
}
