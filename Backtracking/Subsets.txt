using System;
using System.Collections.Generic;

namespace CodeInterview
{
//	Given an integer array nums of unique elements, return all possible subsets(the power set).

//The solution set must not contain duplicate subsets.Return the solution in any order.




//Example 1:

//Input: nums = [1, 2, 3]
//Output: [[], [1], [2], [1,2], [3], [1,3], [2,3], [1,2,3]]







	class Problem
	{
		public List<List<int>> subsets(int[] nums)
		{
			List<List<int>> result = new List<List<int>>();
			List<int> list = new List<int>();

			helper(result, 0, nums, list);

			return result;


		}

		private void helper(List<List<int>> result, int start, int[] nums, List<int> list)
		{
			result.Add(new List<int>(list));

			for (int j = start; j < nums.Length; j++)
			{
				list.Add(nums[j]);

				helper(result, j + 1, nums, list);

				list.RemoveAt(list.Count - 1);
			}

		}


	}

	class Program
	{
		static void Main(string[] args)
		{


			Problem prob = new Problem();

			List<List<int>> result = prob.subsets(new int[] { 1, 2, 3 });

			foreach (List<int> list in result)
			{
				Console.Write("[");
				foreach (int num in list)
					Console.Write(num + ",");
				Console.Write("]\n");
			}







		}
	}
}