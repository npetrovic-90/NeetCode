using System;
using System.Collections.Generic;

namespace CodeInterview
{
	//	202. Happy Number
	//Easy

	//6148

	//782

	//Add to List

	//Share
	//Write an algorithm to determine if a number n is happy.

	//A happy number is a number defined by the following process:

	//Starting with any positive integer, replace the number by the sum of the squares of its digits.
	//Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
	//Those numbers for which this process ends in 1 are happy.
	//Return true if n is a happy number, and false if not.



	//Example 1:

	//Input: n = 19
	//Output: true
	//Explanation:
	//12 + 92 = 82
	//82 + 22 = 68
	//62 + 82 = 100
	//12 + 02 + 02 = 1



	class Problem
	{

		public bool IsHappy(int n)
		{
			if (n == 1 || n == -1)
				return true;

			HashSet<int> visited = new HashSet<int>();

			while (!visited.Contains(n))
			{
				visited.Add(n);

				n = sumOfSquare(n);

				if (n == 1) return true;

			}

			return false;

		}

		private int sumOfSquare(int n)
		{
			int sum = 0;
			while (n != 0)
			{
				int digit = n % 10;

				digit = digit * digit;

				sum = sum + digit;

				n = n / 10;
			}

			return sum;
		}


	}





	class Program
	{
		static void Main(string[] args)
		{


			Problem prob = new Problem();

			bool result = prob.IsHappy(2);



			Console.WriteLine("Is number happy:" + result);


		}
	}

}