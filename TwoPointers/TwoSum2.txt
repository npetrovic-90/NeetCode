using System;

namespace CodeInterview
{

	//	Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number.Let these two numbers be numbers[index1] and numbers[index2] where 1 <= index1<index2 <= numbers.length.

	//Return the indices of the two numbers, index1 and index2, added by one as an integer array[index1, index2] of length 2.

	//The tests are generated such that there is exactly one solution.You may not use the same element twice.

	//Your solution must use only constant extra space.



	//Example 1:

	//Input: numbers = [2, 7, 11, 15], target = 9
	//Output: [1,2]
	//Explanation: The sum of 2 and 7 is 9. Therefore, index1 = 1, index2 = 2.We return [1, 2].
	class Problem
	{


		//Solution
		//array of number is sorted, compare left side to the right if they are same return, if they arent
		//increment left one if sum of those 2 is smaller than target, else decrease right one.



		public int[] twoSum(int[] numbers, int target)
		{
			int i = 0;
			int j = numbers.Length - 1;

			while (i < j)
			{
				if (numbers[i] + numbers[j] == target) break;

				if (numbers[i] + numbers[j] < target) { i++; continue; }

				j--;
			}




			return new int[] { i + 1, j + 1 };
		}





	}






	class Program
	{
		static void Main(string[] args)
		{



			Problem problem = new Problem();

			int[] res = problem.twoSum(new int[] { 2, 3, 4 }, 6);

			Console.WriteLine("[" + res[0] + "," + res[1] + "]");







		}
	}
}