using System;

namespace CodeInterview
{
	//	97. Interleaving String
	//Medium

	//5681

	//340

	//Add to List

	//Share
	//Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2.

	//An interleaving of two strings s and t is a configuration where s and t are divided into n and m non-empty substrings respectively, such that:

	//s = s1 + s2 + ... + sn
	//t = t1 + t2 + ... + tm
	//|n - m| <= 1
	//The interleaving is s1 + t1 + s2 + t2 + s3 + t3 + ... or t1 + s1 + t2 + s2 + t3 + s3 + ...
	//Note: a + b is the concatenation of strings a and b.



	//Example 1:


	//Input: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbcbcac"
	//Output: true
	//Explanation: One way to obtain s3 is:
	//Split s1 into s1 = "aa" + "bc" + "c", and s2 into s2 = "dbbc" + "a".
	//Interleaving the two splits, we get "aa" + "dbbc" + "bc" + "a" + "c" = "aadbbcbcac".
	//Since s3 can be obtained by interleaving s1 and s2, we return true.
	class Problem
	{


		public bool IsInterleave(string s1, string s2, string s3)
		{
			if (s1.Length + s2.Length != s3.Length)
			{
				return false;
			}

			bool[,] grid = new bool[s1.Length + 1, s2.Length + 1];

			grid[s1.Length, s2.Length] = true;

			for (int i = grid.GetLength(0) - 1; i >= 0; i--)
				for (int j = grid.GetLength(1) - 1; j >= 0; j--)
				{
					if (i < s1.Length && s1[i] == s3[i + j] && grid[i + 1, j])
					{
						grid[i, j] = true;
					}

					if (j < s2.Length && s2[j] == s3[i + j] && grid[i, j + 1])
					{
						grid[i, j] = true;
					}
				}

			return grid[0, 0];
		}


		class Program
		{
			static void Main(string[] args)
			{



				Problem problem = new Problem();

				Console.WriteLine(problem.IsInterleave("aabcc", "dbbca", "aadbbcbcac"));




			}
		}
	}
}