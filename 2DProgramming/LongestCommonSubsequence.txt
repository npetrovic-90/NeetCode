using System;

namespace CodeInterview
{

	//	1143. Longest Common Subsequence
	//Medium

	//7724

	//87

	//Add to List

	//Share
	//Given two strings text1 and text2, return the length of their longest common subsequence.If there is no common subsequence, return 0.

	//A subsequence of a string is a new string generated from the original string with some characters(can be none) deleted without changing the relative order of the remaining characters.

	//For example, "ace" is a subsequence of "abcde".
	//A common subsequence of two strings is a subsequence that is common to both strings.




	//Example 1:


	//Input: text1 = "abcde", text2 = "ace"
	//Output: 3  
	//Explanation: The longest common subsequence is "ace" and its length is 3.
	class Problem
	{


		public int LongestCommonSubsequence(string text1, string text2)
		{
			int m = text1.Length;
			int n = text2.Length;
			int[,] grid = new int[m + 1, n + 1];

			for (int i = m - 1; i >= 0; i--)
				for (int j = n - 1; j >= 0; j--)
				{
					if (text1[i] == text2[j])
					{
						grid[i, j] = 1 + grid[i + 1, j + 1];
					}
					else
					{
						grid[i, j] = Math.Max(grid[i, j + 1], grid[i + 1, j]);
					}
				}

			return grid[0, 0];
		}
	}


	class Program
	{
		static void Main(string[] args)
		{



			Problem problem = new Problem();

			Console.WriteLine(problem.LongestCommonSubsequence("abcde", "abc"));




		}
	}
}