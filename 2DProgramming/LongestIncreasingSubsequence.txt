using System;
using System.Collections.Generic;

namespace CodeInterview
{
	//	300. Longest Increasing Subsequence
	//Medium

	//14504

	//263

	//Add to List

	//Share
	//Given an integer array nums, return the length of the longest strictly increasing subsequence.

	//A subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements.For example, [3,6,2,7] is a subsequence of the array[0, 3, 1, 6, 2, 2, 7].




	//Example 1:

	//Input: nums = [10, 9, 2, 5, 3, 7, 101, 18]
	//Output: 4
	//Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.
	//Example 2:

	//Input: nums = [0, 1, 0, 3, 2, 3]
	//Output: 4
	//Example 3:

	//Input: nums = [7, 7, 7, 7, 7, 7, 7]
	//Output: 1
	class Problem
	{


		public int LengthOfLIS(int[] nums)
		{
			if (nums.Length == 1) return 1;

			int[] LIS = new int[nums.Length];

			for (int i = 0; i < nums.Length; i++)
				LIS[i] = 1;


			int maximum = 1;

			for (int i = nums.Length - 1; i >= 0; i--)
			{
				for (int j = i + 1; j < nums.Length; j++)
				{
					if (nums[i] < nums[j])
					{
						LIS[i] = Math.Max(1 + LIS[j], LIS[i]);
					}
				}
				maximum = Math.Max(maximum, LIS[i]);
			}
			return maximum;
		}

		class Program
		{
			static void Main(string[] args)
			{



				Problem problem = new Problem();

				IList<string> list = new List<string>();
				list.Add("leet");
				list.Add("code");

				Console.WriteLine(problem.LengthOfLIS(new int[] { 10, 9, 2, 5, 3, 7, 101, 18 }));




			}
		}
	}
}