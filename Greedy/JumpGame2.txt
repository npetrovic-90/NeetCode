using System;

namespace CodeInterview
{
	//	45. Jump Game II
	//Medium

	//9103

	//325

	//Add to List

	//Share
	//Given an array of non-negative integers nums, you are initially positioned at the first index of the array.

	//Each element in the array represents your maximum jump length at that position.

	//Your goal is to reach the last index in the minimum number of jumps.

	//You can assume that you can always reach the last index.



	//Example 1:

	//Input: nums = [2, 3, 1, 1, 4]
	//Output: 2
	//Explanation: The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.
	class Problem
	{


		public int Jump(int[] nums)
		{
			int left = 0;
			int right = 0;
			int farthest;
			int result = 0;

			while (right < nums.Length - 1)
			{

				farthest = 0;

				for (int i = left; i <= right; i++)
					farthest = Math.Max(farthest, nums[i] + i);

				left = right + 1;
				right = farthest;
				result++;
			}


			return result;
		}
	}


	class Program
	{
		static void Main(string[] args)
		{



			Problem problem = new Problem();

			Console.WriteLine(problem.Jump(new int[] { 2, 3, 1, 1, 4 }));




		}
	}
}