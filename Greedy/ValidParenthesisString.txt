using System;

namespace CodeInterview
{
	//	678. Valid Parenthesis String
	//Medium

	//3692

	//92

	//Add to List

	//Share
	//Given a string s containing only three types of characters: '(', ')' and '*', return true if s is valid.

	//The following rules define a valid string:

	//Any left parenthesis '(' must have a corresponding right parenthesis ')'.
	//Any right parenthesis ')' must have a corresponding left parenthesis '('.
	//Left parenthesis '(' must go before the corresponding right parenthesis ')'.
	//'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string "".


	//Example 1:

	//Input: s = "()"
	//Output: true
	//Example 2:

	//Input: s = "(*)"
	//Output: true
	class Problem
	{


		public bool CheckValidString(string s)
		{
			int leftMin = 0;
			int leftMax = 0;

			for (int i = 0; i < s.Length; i++)
			{
				if (s[i] == '(')
				{

					leftMin++;
					leftMax++;
				}
				else if (s[i] == ')')
				{
					leftMin--;
					leftMax--;

				}
				else
				{
					leftMin--;
					leftMax++;
				}

				if (leftMax < 0) return false;

				if (leftMin < 0) leftMin = 0;
			}

			if (leftMin == 0) return true;

			return false;
		}


		class Program
		{
			static void Main(string[] args)
			{



				Problem problem = new Problem();

				Console.WriteLine(problem.CheckValidString("(())"));




			}
		}
	}
}
