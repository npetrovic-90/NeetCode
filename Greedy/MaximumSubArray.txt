using System;

namespace CodeInterview
{

	//	53. Maximum Subarray
	//Medium

	//23752

	//1131

	//Add to List

	//Share
	//Given an integer array nums, find the contiguous subarray(containing at least one number) which has the largest sum and return its sum.

	//A subarray is a contiguous part of an array.




	//Example 1:


	//Input: nums = [-2, 1, -3, 4, -1, 2, 1, -5, 4]
	//Output: 6
	//Explanation: [4,-1,2,1] has the largest sum = 6.
	class Problem
	{


		public int MaxSubArray(int[] nums)
		{
			int current = nums[0];
			int result = nums[0];

			for (int i = 1; i < nums.Length; i++)
			{
				current = Math.Max(current + nums[i], nums[i]);

				result = Math.Max(current, result);
			}

			return result;
		}
	}


	class Program
	{
		static void Main(string[] args)
		{



			Problem problem = new Problem();

			Console.WriteLine(problem.MaxSubArray(new int[] { -2, 1, -3, 4, -1, 2, 1, -5, 4 }));




		}
	}
}