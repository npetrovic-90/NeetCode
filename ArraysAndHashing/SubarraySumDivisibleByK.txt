using System;

namespace CodeInterview
{

	//	974. Subarray Sums Divisible by K
	//Medium

	//3300

	//139

	//Add to List

	//Share
	//Given an integer array nums and an integer k, return the number of non-empty subarrays that have a sum divisible by k.

	//A subarray is a contiguous part of an array.



	//Example 1:

	//Input: nums = [4, 5, 0, -2, -3, 1], k = 5
	//Output: 7
	//Explanation: There are 7 subarrays with a sum divisible by k = 5:
	//[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]

	class Problem
	{
		public int SubarraysDivByK(int[] nums, int k)
		{
			int count = 0;
			int sum = 0;
			// 0 1 2 3 4
			// 1 0 0 0 0
			// 1 0 0 0 2
			int[] tmp_arr = new int[k];
			tmp_arr[0] = 1;
			foreach (int num in nums)
			{
				sum = (sum + num) % k;

				if (sum < 0) sum = sum + k;

				count = count + tmp_arr[sum];
				tmp_arr[sum]++;
				Console.WriteLine("Count:" + count);
			}

			return count;
		}
	}


	class Program
	{
		static void Main(string[] args)
		{

			Problem problem = new Problem();

			Console.WriteLine(problem.SubarraysDivByK(new int[] { 4, 5, 1 }, 5));




		}
	}
}