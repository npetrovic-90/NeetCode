using System;
using System.Collections.Generic;

namespace CodeInterview
{

	//	Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

	//You may assume that each input would have exactly one solution, and you may not use the same element twice.

	//You can return the answer in any order.




	//Example 1:

	//Input: nums = [2, 7, 11, 15], target = 9
	//Output: [0,1]
	//Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
	class Problem
	{


		//Solution
		//add elements of array to the dictionary as <key,value> where key will actaully be target number minus element of the array
		//if result of operation already exists then we just return it new array, of the current loop iteration and value of key that is
		//contained, because that value will actually be index of element we added.


		public int[] twoSum(int[] nums, int target)
		{
			Dictionary<int, int> dict = new Dictionary<int, int>();

			for (int i = 0; i < nums.Length; i++)
			{
				if (dict.ContainsKey(nums[i]))
				{
					return new int[] { dict[nums[i]], i };
				}
				dict.Add(target - nums[i], i);

			}

			return new int[0];

		}



	}






	class Program
	{
		static void Main(string[] args)
		{



			Problem problem = new Problem();

			int[] result = problem.twoSum(new int[] { 3, 2, 4 }, 6);


			foreach (int s in result)
				Console.WriteLine(s);


		}
	}
}