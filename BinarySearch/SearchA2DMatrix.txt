using System;

namespace CodeInterview
{

	////	Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix.This matrix has the following properties:

	////Integers in each row are sorted from left to right.
	////The first integer of each row is greater than the last integer of the previous row.


	////Example 1:


	////Input: matrix = [[1, 3, 5, 7], [10,11,16,20], [23,30,34,60]], target = 3
	////Output: true
	class Problem
	{


		//Solution
		//checking mid one, if it  is the same as the target return it, if it is less than a target increment i by mid+1
		//if it is bigger than target increment j by mid-1;





		public bool searchMatrix(int[,] matrix, int target)
		{

			int row = matrix.GetLength(0);
			int col = matrix.GetLength(1);

			int r = 0;
			int c = col - 1;

			Console.WriteLine("row:" + row + "col:" + col);

			while (r < row && c >= 0)
			{
				int current = matrix[r, c];
				Console.WriteLine(current);
				if (current == target) return true;

				if (current > target) c--;
				else r++;
			}


			return false;

		}







	}


	class Program
	{
		static void Main(string[] args)
		{



			Problem problem = new Problem();
			bool result = problem.searchMatrix(new int[,] { { 1, 3, 5, 7 }, { 10, 11, 16, 20 }, { 23, 30, 34, 60 } }, 11);

			Console.WriteLine(result);



		}
	}
}