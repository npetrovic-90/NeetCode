using System;
using System.Collections.Generic;

namespace CodeInterview
{
	//	139. Word Break
	//Medium

	//11774

	//509

	//Add to List

	//Share
	//Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.

	//Note that the same word in the dictionary may be reused multiple times in the segmentation.




	//Example 1:

	//Input: s = "leetcode", wordDict = ["leet", "code"]
	//Output: true
	//Explanation: Return true because "leetcode" can be segmented as "leet code".
	//Example 2:

	//Input: s = "applepenapple", wordDict = ["apple", "pen"]
	//Output: true
	//Explanation: Return true because "applepenapple" can be segmented as "apple pen apple".
	//Note that you are allowed to reuse a dictionary word.
	class Problem
	{


		public bool WordBreak(string s, IList<string> wordDict)
		{
			bool[] dp = new bool[s.Length + 1];



			dp[s.Length] = true;

			for (int i = s.Length - 1; i >= 0; i--)
			{
				foreach (string word in wordDict)
				{
					if (((i + word.Length) <= s.Length) && s.Substring(i, word.Length).StartsWith(word))
					{
						dp[i] = dp[i + word.Length];
					}

					if (dp[i]) break;
				}
			}


			return dp[0];
		}

		class Program
		{
			static void Main(string[] args)
			{



				Problem problem = new Problem();

				IList<string> list = new List<string>();
				list.Add("leet");
				list.Add("code");

				Console.WriteLine(problem.WordBreak("leetcode", list));




			}
		}
	}
}