using System;

namespace CodeInterview
{

	//	198. House Robber
	//Medium

	//13665

	//282

	//Add to List

	//Share
	//You are a professional robber planning to rob houses along a street.Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night.

	//Given an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.



	//Example 1:

	//Input: nums = [1, 2, 3, 1]
	//Output: 4
	//Explanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).
	//Total amount you can rob = 1 + 3 = 4.
	class Problem
	{


		//Solution
		//iterate through array of numbers, count them and add them to hashmap
		//create new array that has same length as original array and add elements from hashmap to that array
		//where number of apperances of each number will be value of new array member


		public int Rob(int[] nums)
		{
			int next = 0;
			int previous = 0;
			int curr = 0;

			//[previous,next,1,2,3,1]
			for (int i = 0; i < nums.Length; i++)
			{
				next = Math.Max(previous + nums[i], curr);
				previous = curr;
				curr = next;
				Console.WriteLine("next:" + next + " curr:" + curr + " previous:" + previous);
			}


			return curr;
		}



	}


	class Program
	{
		static void Main(string[] args)
		{

			Problem problem = new Problem();



			Console.WriteLine(problem.Rob(new int[] { 1, 2, 3, 1 }));





		}
	}
}