using System;

namespace CodeInterview
{

	//	238. Product of Array Except Self
	//Medium

	//13761

	//791

	//Add to List

	//Share
	//Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].

	//The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.

	//You must write an algorithm that runs in O(n) time and without using the division operation.



	//Example 1:

	//Input: nums = [1, 2, 3, 4]
	//Output: [24,12,8,6]
	class Problem
	{
		public int[] ProductExceptSelf(int[] nums)
		{

			int[] output = new int[nums.Length];

			output[0] = 1;

			for (int i = 1; i < nums.Length; i++)
			{
				output[i] = output[i - 1] * nums[i - 1];
			}

			int tmp_product = 1;

			for (int i = nums.Length - 1; i >= 0; i--)
			{

				output[i] = output[i] * tmp_product;
				tmp_product *= nums[i];
			}


			return output;
		}


	}


	class Program
	{
		static void Main(string[] args)
		{

			Problem problem = new Problem();

			int[] result = problem.ProductExceptSelf(new int[] { 1, 2, 3, 4 });

			foreach (int num in result)
				Console.Write(num + " ");

		}
	}
}
