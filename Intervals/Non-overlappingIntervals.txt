using System;

namespace CodeInterview
{
	//	435. Non-overlapping Intervals
	//Medium

	//4408

	//129

	//Add to List

	//Share
	//Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.



	//Example 1:

	//Input: intervals = [[1,2],[2,3],[3,4],[1,3]]
	//Output: 1
	//Explanation: [1,3] can be removed and the rest of the intervals are non-overlapping.



	class Problem
	{

		public int EraseOverlapIntervals(int[][] intervals)
		{
			int num_of_intervals = intervals.Length;

			int result = 0;

			int i = 0;

			while (i < num_of_intervals - 1)
			{
				if (intervals[i][1] > intervals[i + 1][0])
				{
					if (intervals[i][1] < intervals[i + 1][1])
					{
						intervals[i + 1] = intervals[i];
					}
					result++;
				}
				i++;
			}


			return result;

		}



	}

	class Program
	{
		static void Main(string[] args)
		{


			Problem prob = new Problem();

			int result = prob.EraseOverlapIntervals(new int[][] {
				new int[2] { 1, 3 },
				new int[2] { 2, 6 },
				new int[2] { 8, 10 },
				new int[2] { 15, 18 }

			});



			Console.WriteLine("intervals to be removed:" + result);


		}
	}

}